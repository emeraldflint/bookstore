spring.thymeleaf.cache=false

# ==========================
# = DATA SOURCE
# ==========================

# Set here configurations for the database connection
#//spring.datasource.url=jdbc:mysql://localhost:3306/bookstore

# Username and secret
#spring.datasource.username=root
#spring.datasource.password=root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true;
spring.datasource.validationQuery = SELECT 1

# ==========================
# = JPA / HIBERNATE
# ==========================

# Use string.jpa.properties.* for Hibernate native properties (the prefix is stripped before adding them to the
# entity manager

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate  ddl auto (create, create-drop, update): with "updateL" the database
# scheme will be automatically updated accordingly to java entities found in the project
spring.jpa.hibernate.ddl-auto=update

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

server.port = 8080

spring.datasource.url = jdbc:h2:mem:app_db;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.url = jdbc:h2:file:~/h2/app_db;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username = sa
spring.datasource.password =
spring.datasource.driverClassName = org.h2.Driver
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.mail.host=smtp.gmail.com
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.sccketFactory.port=465
spring.mail.properties.mail.smtp.sccketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
support.email=#

